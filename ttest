p = collect(pat)

@memoize function matchdefects(p, grp)
    isempty(p) && return isempty(grp) ? 1 : 0
    isempty(grp) && return isnothing(findfirst(==('#'), p)) ? 1 : 0
    g = first(grp)
    while !isempty(p)
        c = popfirst!(p)
        if c == '.'
            continue
        elseif c == '#'
             g -= 1
             if g == 0
                 first(p) == '#' && return 0
                 return matchdefects(p[begin+1:end], grp[begin+1:end])                     
             end
         elseif c == '?'
             return matchdefects(vcat('.',  p[begin+1:end]), vcat(g, grp[begin+1:end])) +
                    matchdefects(vcat('#',  p[begin+1:end]), vcat(g, grp[begin+1:end]))
         else
             error("unknown pattern char $c")
         end
    end
    return g == 0 && length(grp) == 1 # p and grp empty are 1, otherwise 0
end

