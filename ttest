
minimum_digitsums = [Int(ceil((10^i - 1) / 9i)) for i in 1:10]

max_to_search(n) = minimum_digitsum[findfirst(>(n), minimum_digitsums)]
digitalsum(n) = sum(d * 10^i for i, d in enumerate(reverse([int(c) for c in str(n)])))
       
def generate_inconsummate(max_wanted):
    limit = max_to_search(max_wanted)
    arr = fill(0, limit)
    for n in range(limit):
        dsum = digitalsum(n)
        rem = n % dsum
        if rem % dsum == 0:
            arr[n] = rem
            
     count = 0
     for n in range(max_search):
         if n > 0:
             count += 1
             yield n, count


     

