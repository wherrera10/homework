using Primes

const PRIMES = [primes(625000)]

function PI(n)
    if n > first(PRIMES)[end]
        empty!(PRIMES)
        push!(PRIMES, primes(2n))
    end
    return n < 100000 ? findfirst(x -> x > n, first(PRIMES)) - 1 :
        findlast(x -> x <= n, first(PRIMES))
end

function Ramanujan_prime(n)
    maxposs = Int(ceil(4n * (log(4n) / log(2))))
    for i in maxposs:-1:1
        PI(i) - PI(i รท 2) < n && return i + 1
    end
    return 0
end

for i in 1:100
    print(lpad(Ramanujan_prime(i), 5), i % 20 == 0 ? "\n" :  "")
end

@time println("\nThe 1000th Ramanujan prime is ", Ramanujan_prime(1000))

@time println("\nThe 10,000th Ramanujan prime is ", Ramanujan_prime(10000))
