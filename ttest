using Formatting

const wrappings = [[1, 9], [2, 8], [3, 7], [4, 6],
                   [5, 5], [6, 4], [7, 3], [8, 2], [9, 1]]
const firstevenlengthseq = [19, 28, 37, 46, 55, 64, 73, 82, 91]
const firstoddlengthseq = [5]

""" iterable for upside-down numbers """
mutable struct UpsideDowns
    evens::Vector{Int}
    odds::Vector{Int}
    UpsideDowns() = new(firstevenlengthseq, firstoddlengthseq)
end

""" generate upside-down numbers (OEIS A299539) """
function Base.iterate(ud::UpsideDowns, state = (1, 0, 0, 1, 9))
    ndigits, odd_index, even_index, olen, elen = state
    next_in_seq = 0
    if isodd(ndigits)
        if olen > odd_index
            next_in_seq = ud.odds[begin + odd_index]
            odd_index += 1
        else
            # build next odds, but switch to evens
            ud.odds = vec([hi * 10^(ndigits + 1) + 10 *
                      i + lo for i in ud.odds, (hi, lo) in wrappings])
            ndigits += 1
            odd_index = 1
            olen = length(ud.odds)
            next_in_seq = ud.evens[begin]
        end
    else
        if elen > even_index
            next_in_seq = ud.evens[begin + even_index]
            even_index += 1
        else
            # build next evens, but switch to odds
            ud.evens = vec([hi * 10^(ndigits + 1) + 10 *
                       i + lo for i in ud.evens, (hi, lo) in wrappings])
            ndigits += 1
            even_index = 1
            elen = length(ud.evens)
            next_in_seq = ud.odds[begin]
        end
    end
    return next_in_seq, (ndigits, odd_index, even_index, olen, elen)
end

println("First fifty upside-downs:")
const UD = UpsideDowns()
for (udcount, udnumber) in enumerate(UD)
    if udcount <= 50
        print(lpad(udnumber, 5), udcount % 10 == 0 ? "\n" : "")
    elseif udcount == 500
        println("Five hundredth: ", format(udnumber, commas = true))
    elseif udcount == 5000
        println("Five thousandth: ", format(udnumber, commas = true))
    elseif udcount == 50_000
        println("Fifty thousandth: ", format(udnumber, commas = true))
    elseif udcount == 500_000
        println("Five hundred thousandth: ", format(udnumber, commas = true))
    elseif udcount == 5_000_000
        println("Five millionth: ", format(udnumber, commas = true))
        break
    end
 end
 
 """
 5   19   19   28   37   46   55   64   73   82
 91  159  258  357  456  555  654  753  852  951
1199 1289 1379 1469 1559 1649 1739 1829 1919 2198
2288 2378 2468 2558 2648 2738 2828 2918 3197 3287
3377 3467 3557 3647 3737 3827 3917 4196 4286 4376
Five hundredth: 493,716
Five thousandth: 56,537,545
Fifty thousandth: 6,441,379,664
Five hundred thousandth: 729,663,744,183
Five millionth: 82,485,237,852,682
"""
