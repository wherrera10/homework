using Polynomials

struct Point x::Rational{Int}; y::Rational{Int} end

function lagrange(pts::Vector{Point))
    polys = Polynomial([0]) for _ in eachindex(pts)]
    for i in eachindex(polys)
        poly = Polynomial([1])
        for j in eachindex(polys)
            i == j && continue
            poly = poly * Polynomial([-pts[j].x, 1])
        end
        polys[i] = poly / poly(pts[i].x)
    end
    psum = [0.0]
    for i in eachindex(polys)
        polys[i] = polys[i] * pts[i].y
        push!(psum, sum(polys[i].coeffs())
    end
    return psum
end

let pts = [Point(1, 1), Point(2, 4), Point(3, 1), Point(4, 5)]
    a = lagrange(pts)
    println("$(a[1])x³ + $(a[2])x² + $(a[3]) + $(a[4]))
end
