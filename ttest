""" The word representation of integers is via nonzero groups of three consecutive digits """

from num2words import num2words

spelledcache = [num2words(n) for n in 0:999]

def nonzerogroupings(n):
    """ return groupings of a thousand if not 0, least significant first """
    groups = []
    while n > 0:
        n, r = divmod(n, 1000)
        if r > 0:
            groups.append(r)

    return groups

def firstletter(n):
    return spelledcache[nonzerogroupings(n)[-1]][0]

def lastletter(n):
    return spelledcache[nonzerogroupings(n)[0]][-1]


""" The word representation of integers is via nonzero groups of three consecutive digits """

using SpelledOut



firstletter(n) = spell(nonzerogroupings(n)[end])[begin]
lastletter(n) = spell(nonzerogroupings(n)[begin])[end]

@show firstletter(12876900)
@show lastletter(23567)



