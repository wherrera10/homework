
function run(elves, goesfirst)
    if length(elves) < 3
        empty!(elves)
        push!(elves, goesfirst)
        return goesfirst
    end
    i = findfirst(==(goesfirst), elves)
    starting_length = length(elves)
    n = starting_length
    eliminated = 0
    while elves[i] > 0
        target = mod1(i + eliminated + (n >> 1), starting_length)
        elves[target] = 0
        n -= 1
        eliminated += 1
        i = mod1(i + 1, starting_length)
    end
    return elves[something(findnext(>(0), elves, i), findfirst(>(0), elves))]
end


function test(input)
    elves = collect(1:input)
    next_to_go = 1
    while length(elves) > 1
        next_to_go = run(elves, next_to_go)
  #  @show next_to_go, elves
        filter!(!=(0), elves)
    end
    return next_to_go
end

foreach(i -> println(i, "  ", test(i)), 1:50)
