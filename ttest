#=
The infinite list c contains all addition chains, ordered by length. 
It is defined inductively in terms of itself, by taking a list x from c and two elements from x, 
and appending their sum to x. The function f finds the first list in c that ends with the desired number.

c=            -- c is the list of lists
 [1]:         -- containing [1] and
 [x           -- each list x
  ++[a+b]     -- extended with a+b
 |x<-c,       -- where x is drawn from c,
  a<-x,       -- a is drawn from x and
  b<-x]       -- b is drawn from x.
f n=          -- f on input n is:
 [x           -- take list of those lists x
 |x<-c,       -- where x is drawn from c and
  last x==n]  -- x ends with n,
 !!0          -- return its first element.
=#


nextlist(arr, apos, pos1, pos2) = [arr[apos]; arr[apos][pos1] + arr[apos][pos2]]

function get_addition_lists(maxlength = 11)
    allsums = [[1]]
    apos, pos1, pos2 = 1, 1, 1
    while all(a -> length(a) < maxlength, allsums)
        for i in 1:length(allsums)
            alen = length(allsums[i])
            for j in 1:alen, k in 1:alen
                push!(allsums, nextlist(allsums, i, j, k))
            end
        end
        endings = unique(map(a -> a[end], allsums))
        newallsums = empty(allsums)
        for n in endings
            push!(newallsums, sort!(filter(a -> a[end] == n, allsums), key = length))[begin])
        end
        allsums = newallsums
    end
    
    

