def kmp_search(S, W):
"""
    input:
        an array of characters, S (the text to be searched)
        an array of characters, W (the word sought)
    output:
        an array of integers, P (positions in S at which W is found)
        an integer, nP (number of positions)

    define variables:
        an integer, j ← 0 (the position of the current character in S)
        an integer, k ← 0 (the position of the current character in W)
        an array of integers, T (the table, computed elsewhere)
"""
    nP = 0
    P = {}
    while j < len(S):
        if W[k] == S[j]:
            j += 1
            k += 1
            if k = len(W):
                # (occurrence found, if only first occurrence is needed, m ← j - k  may be returned here)
                P[nP] = j - k
		nP += 1
                k = T[k] # (T[length(W)] can't be -1)
        else:
            let k ← T[k]
            if k < 0 then
                let j ← j + 1
                let k ← k + 1
		
