''' Rosetta code task: rosettacode.org/wiki/Zsigmondy_numbers '''

using Primes

function Zsigmondy(a, b, limit = 30)
    aexp, bexp = map(n -> a^n, 0:limit), map(n -> b^n, 0:limit)
    for n in 1:limit
        for d in divisors(abs(aexp[n] - bexp[n]))
                divis.first: -> $d { all (1..^$n).map: -> $m { (@aexp[$m] - @bexp[$m]) gcd $d == 1 } }
        end
    end
end


function zs(n, a, b)
    dn = a^n - b^n
    isprime(dn) && return dn
    divs = divisors(dn)
    dms = map(m -> a^m - b^m, 1:n)
    for d in divs
        all(dm -> gcd(dm, d) == 1, dms) && return d
    end
    return 1
end

abs = [ [2, 1], [3, 1], [4, 1], [5, 1], [6, 1], [7, 1], [3, 2], [5, 3], [7, 3], [7, 5] ]
for (a, b) in abs
    limit = (a == 7 && b != 3) ? 18 : 20
    println("Zsigmony(n, $a, $b) - first $limit terms: ", [zs(n, a, b) for n in 1:limit])
end

