using Combinatorics
using Primes

const isprime100 = primesmask(100)

function primetriangle(nrows::Integer)
    nrows < 2 && error("number of rows requested must be > 1")
    counts = zeros(Int, nrows)
    counts[begin] = 1
    println("  1  2")
    for row in 2:nrows, p in permutations(2:row)
        if isprime100[p[1] + 1] && isprime100[p[end] + row + 1] &&
            all(i -> isprime100[p[i] + p[i+1]], 1:row-2)
            if counts[row] == 0
                print("  1")
                for n in p
                    print(lpad(n, 3))
                end
                println(lpad(row + 1, 3))
            end
            counts[row] += 1
        end
    end
    println("\n", counts)
end

primetriangle(17)
