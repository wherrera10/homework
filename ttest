using BenchmarkTools

using Primes

const DIR = "C:/Users/wherr/OneDrive/Documents/Julia Programs/aoc_2017"

const C23, D23 = 9_999_999_999, 10_000_000_000
jnz23(x, y, r, ip) = (ip[begin] += (0 < abs(x) < C23 || r[x÷D23] != 0) ? (y < C23 ? y : r[y÷D23]) : 1)
mul23(x, y, r, ip) = (r[x > C23 ? x ÷ D23 : x] *= (y > C23) ? r[y÷D23] : y; ip[begin] += 1)
set23(x, y, r, ip) = (r[x > C23 ? x ÷ D23 : x] = (y > C23) ? r[y÷D23] : y; ip[begin] += 1)
sub23(x, y, r, ip) = (r[x > C23 ? x ÷ D23 : x] -= (y > C23) ? r[y÷D23] : y; ip[begin] += 1)
function day23()
    part = [0, 0]
    ip = [1]
    r = [0, 0, 0, 0, 0, 0, 0, 0]
    functions = [jnz23, mul23, set23, sub23]
    registers = collect("abcdefgh")
    cmds = ["jnz", "mul", "set", "sub"]
    code = Vector{Int}[]
    for entry in readlines("$DIR/day23.txt")
        words = split(entry, r"\s+")
        cmd = findfirst(==(words[1]), cmds)
        r1 = words[2][1] ∈ registers ?
             D23 * findfirst(i -> i == words[2][1], registers) : parse(Int, words[2])
        r2 = words[3][1] ∈ registers ?
             D23 * findfirst(i -> i == words[3][1], registers) : parse(Int, words[3])
        push!(code, [cmd, r1, r2])
    end
    ip_end = length(code)
    while 0 < ip[begin] <= ip_end
        f, x, y = code[ip[begin]]
        functions[f](x, y, r, ip)
        if f == 2
            part[1] += 1
        end
    end

    b = 100 * 81 + 100000
    c = b + 17000
    for d in b:17:c
        if !isprime(d)
            part[2] += 1
        end
    end

    return part
end

@btime day23()

@show day23() # [6241, 909]
