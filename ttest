
function snakeToCamelCase(s)
    isempty(s) && return s
    return split(strip(s), r"[ \-_]+") .|> uppercasefirst |> join |> lowercasefirst
end

function camel_to_snake_case(s, sep="_", allsep = r"[ \-_]+")
    isempty(s) && return s
    return replace(replace(strip(s), r"[A-Z]+" => x -> sep * lowercase(x)), allsep => sep)
end

TESTS = [
    "snakeCase", "snake_case", "variable_10_case", "variable10Case",
    "É›rgo rE tHis", "hurry-up-joe!", "c://my-docs/happy_Flag-Day/12.doc", " spaces "
]

println("To camel case:")
for test in TESTS
    println(lpad(test, 40), " => ", snakeToCamelCase(test))
end

println("\nTo snake case:")
for test in TESTS
    println(lpad(test, 40), " => ", camel_to_snake_case(test))
end

println("\nTo kebab case:")
for test in TESTS
    println(lpad(test, 40), " => ", camel_to_snake_case(test, "-"))
end

