struct AnagramRepresentations
    char_counts::Vector{Int}
    representations::Set{String}
    AnagramRepresentations() = new(zeros(Int, 26), Set{String}())
    function AnagramRepresentations(str::String)
        s = lowercase(str)
        arr = [count(ch, s) for (i, ch) in enumerate('a':'z')]
        return new(arr, Set(str))
    end
end

function validrep(a, str)
    s = lowercase(str)
    return a.char_counts == [count(ch, s) for (i, ch) in enumerate('a':'z')]
end


def alst(ALLBELOW=1000):
  out, ana = set(), dict()
  for i in range(ALLBELOW):
    key = "".join(sorted(num2words(i)))
    if key in ana: out.update([ana[key], i])
    else: ana[key] = i
  return sorted(out)
print(alst()
