const AnagramRepresentations = Dict{Vector{Int}}, Set{String}}

function addrep!(anadict, str)
    s = lowercase(str)
    arr = [count(ch, s) for (i, ch) in enumerate('a':'z')]
    if haskey(anadict, arr)
        push!(anadict[arr], str)
    else
        anadict[arr] = Set{String}([arr])
    end
end

function process_english_range(maxrange, showfirst30)
    numstrings = map(num2string, 1:maxrange)
    anadict = AnagramRepresentations()
    for s in numstrings
        addrep!(anadict, s)
    end
    counts = [length(anadict[s]) for s in numstrings]
    if showfirst30
        println("First 30 English cardinal anagrams:")
        for (i, n) in filter(>(1), counts)[1:30]
            print(rpad(n, 4), i % 10 == 0 ? "\n" :"")
        end
    end
    println("Count of English cardinal anagrams up to $maxrange: $(count(>(1), counts)")
    println("\nLargest group(s) of English cardinal anagrams up to $maxrange:")
    maxcount = maximum(counts)
    println([i for i in 1:maxrange if counts[i] == maxcount], "\n")
end

process_english_range(1000, true)
process_english_range(10000, false)
