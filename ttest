using Combinatorics
using Primes

function primetriangle(nrows::Integer)
    nrows < 2 && error("number of rows requested must be > 1")
    pmask = primesmask(2 * (nrows + 1))
    counts, rowstrings = [1; zeros(Int, nrows - 1)], ["" for _ in 1:nrows+1]
    @Threads.threads for r in 2:nrows
        for p in permutations(2:r)
            if pmask[p[end] + r + 1] && pmask[p[begin] + 1] && all(i -> pmask[p[i] + p[i+1]], 1:r-2)
                if counts[r] == 0
                    rowstrings[r] = "  1" * prod([lpad(n, 3) for n in p]) * lpad(r + 1, 3) * "\n"
                end
                counts[r] += 1
            end
        end
    end
    println("  1  2\n" * prod(rowstrings), "\n", counts)
end

@time primetriangle(16)

