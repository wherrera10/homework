$ julia --threads=1
f(i) = (sleep(0.001); i);

let state = [0], N=Threads.nthreads()
    @sync for i âˆˆ 1:N
        Threads.@spawn begin
            tid = Threads.threadid()  # Each task gets `tid = 1`.
            old_var = state[tid]      # Each task reads the current value, which for
                                      # all is 0 (!) because...
            new_var = old_var + f(i)  # ...the `sleep` in `f` causes all tasks to pause
                                      # *simultaneously* here (all loop iterations start,
                                      # but do not yet finish).
            state[tid] = new_var      # After being released from the `sleep`, each task
                                      # sets `state[1]` to `i`.
        end
    end
    @show sum(state), sum(1:N)
end


