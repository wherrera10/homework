recursive(point, , costs, UPTO=remaining)
    remaining == 0 && return 
    x, y = c[p], c[p]
    for d in directions
        x2, y2 = x + d[1], y + d[2]
        q = [x2, y2]
        if 2 <= x2 <= rows-1 && 2 <= y2 <= cols-1
            remaining == 1 && grid[x2, y2] == '#' && continue # at exit must be on empty tile
            e1, e2 = scalar(p, rows), scalar(q, rows)
            if !has_edge(g, e1, e2)
                add_edge!(g, e1, e2)
                push!
            end
            # test graph
            recursive(q,  , costs, upto = remaining - 1)                
            # restore edges

       end
      return ()



            
 
