function isogram(word)
    chars = unique(collect(word))
    len, wlen = length(chars), length(word)
    (wlen == 1 || len == wlen) && return 1
    n = count(==(first(chars)), chars)
    return all(i -> count(==(chars[i]), chars) == n, 2:len) ? n : 0
end

words = split(lowercase(read("unixdict.txt", String)), r"\s+")
orderlengthtuples = [(isogram(w), length(w), w) for w in words]

tcomp(x, y) = (x[1] != y[1] ? y[1] < x[1] : x[2] != y[2] ? y[2] < x[2] : x[3] < y[3])

nisograms = sort!(filter(t -> t[1] > 1, orderlengthtuples), lt = tcomp)
heterograms = sort!(filter(t -> t[1] == 1, orderlengthtuples), lt = tsort)

println("N-Isogram    N   Length", "-"^45)
for t in nisograms
    println(rpad(t[3], 24), lpad(t[1], 10), lpad(t[2], 10))
end

println("Heterogram   Length", "-"^35)
for t in heterograms
    println(rpad(t[3], 24), lpad(t[2], 10))
end

