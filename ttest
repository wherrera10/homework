
function aupto(lim::T, mx::T = zero(T)) where T <: Integer
    lim < 2 && return [one(T)]
    v, t = [one(T)], one(T)
    mx == 0 && (mx = lim)
    for k in 2:mx
        t *= k
        t > lim && break
        append!(v, [t * rest for rest in aupto(lim รท t, t)])
    end
    return unique(sort!(v))
end

factorials = [factorial(i) for i in 2:19]

function decompose(n::T, start = 18) where T <: Integer
    start < 2 && return T[]
    m = n
    f = T[]
    for i in start:-1:2
        while m % factorials[i] == 0
            push!(f, i)
            m รท= factorials[i]
            m == 1 && return f
        end
    end
    return decompose(n, start - 1)
end


arr = aupto(2^53)

println(arr[[800, 1800, 2800, 3800]])

println([decompose(n) for n in arr[[800, 1800, 2800, 3800]]])
