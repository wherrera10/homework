fn GSTrans_decode(txt: str) -> String {
    let mut result = Vec<char>::new();
    let mut i = 0;
    while i < txt.len() {
        let mut foundchar = false;
        let mut decodedchar = ' ';
        for j in ..4 {
            let substr = txt[i:i+j];
            if decode_map.contains_(substr) {
                decodedchar = decode_map[substr];
                foundchar = true;
                i += j;
                break;
            }
        }
        if foundchar {
            result.push(decodedchar);
        else
            i += 1;
            warn!();
        }
    }
    return result.into_iter().collect();
}


    
